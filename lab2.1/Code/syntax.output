Terminals unused in grammar

   SINGLEOR
   STRUCT
   LOWER_THAN_DEDUCT
   LOWER_THAN_SEMI


State 98 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: DSList

    2 DSList: Stmt DSList
    3       | %empty

    4 Stmt: Exp SEMI
    5     | VarDef SEMI
    6     | ADTDef
    7     | CompSt
    8     | RETURN Exp SEMI
    9     | IF LP Exp RP Stmt
   10     | IF LP Exp RP Stmt ELSE Stmt
   11     | WHILE LP Exp RP Stmt
   12     | SEMI

   13 CompSt: LC DSList RC

   14 FuncParamType: Specifier DEDUCT FuncParamType
   15              | Specifier

   16 FuncType: FUNC LP FuncParamType RP

   17 FuncDec: LP VarList RP DEDUCT Specifier
   18        | LP RP DEDUCT Specifier

   19 VarList: ParamDec COMMA VarList
   20        | ParamDec

   21 ParamDec: Specifier VarDec

   22 FuncBody: FuncDec CompSt

   23 FuncCall: Exp LP RP
   24         | Exp LP Args RP

   25 Args: Exp COMMA Args
   26     | PLACEHOLDER COMMA Args
   27     | Exp

   28 ArrayType: Specifier LB Exp RB

   29 ReferType: REFER LP Specifier RP

   30 ADTDef: ADTHeader SEMI
   31       | ADTHeader ASSIGNOP ConstructorDecList

   32 ADTHeader: DATA TypeId ADTParamList

   33 ADTParamList: ADTParam ADTParamList
   34             | %empty

   35 ADTParam: LOWERID

   36 ConstructorDecList: ConstructorDec
   37                   | ConstructorDec ConstructorDecList

   38 ConstructorDec: ConstructorId TypeIdList

   39 ConstructorId: UPPERID

   40 TypeIdList: TypeId TypeIdList
   41           | ADTParam TypeIdList
   42           | SEMI

   43 TypeId: UPPERID

   44 PatternMatching: LET LP ConstructorId PatternMatchingParamList RP ASSIGNOP VarDec

   45 PatternMatchingParamList: LOWERID PatternMatchingParamList
   46                         | PLACEHOLDER PatternMatchingParamList
   47                         | %empty

   48 Specifier: BUILDINTYPE
   49          | LET
   50          | TypeId
   51          | ArrayType
   52          | ReferType
   53          | FuncType

   54 VarDef: Specifier DecList
   55       | PatternMatching

   56 DecList: Dec
   57        | Dec COMMA DecList

   58 Dec: VarDec
   59    | VarDec ASSIGNOP Exp

   60 VarDec: LOWERID

   61 Exp: Exp ASSIGNOP Exp
   62    | Exp RELOP Exp
   63    | Exp AND Exp
   64    | Exp OR Exp
   65    | NOT Exp
   66    | Exp PLUS Exp
   67    | Exp MINUS Exp
   68    | Exp STAR Exp
   69    | Exp DIV Exp
   70    | MINUS Exp
   71    | LP Exp RP
   72    | FuncCall
   73    | REFER LP Exp RP
   74    | DEFER LP Exp RP
   75    | Exp DOT INT
   76    | VarDec
   77    | INT
   78    | FLOAT
   79    | FuncBody


Terminals, with rules where they appear

$end (0) 0
error (256)
DEFER (258) 74
REFER (259) 29 73
SINGLEOR (260)
DATA (261) 32
PLACEHOLDER (262) 26 46
LOWERID (263) 35 45 60
UPPERID (264) 39 43
FUNC (265) 16
DEDUCT (266) 14 17 18
LET (267) 44 49
ASSIGNOP (268) 31 44 59 61
RELOP (269) 62
AND (270) 63
OR (271) 64
NOT (272) 65
PLUS (273) 66
MINUS (274) 67 70
STAR (275) 68
DIV (276) 69
BUILDINTYPE (277) 48
STRUCT (278)
INT (279) 75 77
FLOAT (280) 78
IF (281) 9 10
ELSE (282) 10
WHILE (283) 11
RETURN (284) 8
SEMI (285) 4 5 8 12 30 42
COMMA (286) 19 25 26 57
DOT (287) 75
LP (288) 9 10 11 16 17 18 23 24 29 44 71 73 74
RP (289) 9 10 11 16 17 18 23 24 29 44 71 73 74
LB (290) 28
RB (291) 28
LC (292) 13
RC (293) 13
LOWER_THAN_ELSE (294)
LOWER_THAN_DEDUCT (295)
LOWER_THAN_SEMI (296)
LOWER_THAN_ASSIGNOP (297)


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Program (44)
    on left: 1, on right: 0
DSList (45)
    on left: 2 3, on right: 1 2 13
Stmt (46)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 9 10 11
CompSt (47)
    on left: 13, on right: 7 22
FuncParamType (48)
    on left: 14 15, on right: 14 16
FuncType (49)
    on left: 16, on right: 53
FuncDec (50)
    on left: 17 18, on right: 22
VarList (51)
    on left: 19 20, on right: 17 19
ParamDec (52)
    on left: 21, on right: 19 20
FuncBody (53)
    on left: 22, on right: 79
FuncCall (54)
    on left: 23 24, on right: 72
Args (55)
    on left: 25 26 27, on right: 24 25 26
ArrayType (56)
    on left: 28, on right: 51
ReferType (57)
    on left: 29, on right: 52
ADTDef (58)
    on left: 30 31, on right: 6
ADTHeader (59)
    on left: 32, on right: 30 31
ADTParamList (60)
    on left: 33 34, on right: 32 33
ADTParam (61)
    on left: 35, on right: 33 41
ConstructorDecList (62)
    on left: 36 37, on right: 31 37
ConstructorDec (63)
    on left: 38, on right: 36 37
ConstructorId (64)
    on left: 39, on right: 38 44
TypeIdList (65)
    on left: 40 41 42, on right: 38 40 41
TypeId (66)
    on left: 43, on right: 32 40 50
PatternMatching (67)
    on left: 44, on right: 55
PatternMatchingParamList (68)
    on left: 45 46 47, on right: 44 45 46
Specifier (69)
    on left: 48 49 50 51 52 53, on right: 14 15 17 18 21 28 29 54
VarDef (70)
    on left: 54 55, on right: 5
DecList (71)
    on left: 56 57, on right: 54 57
Dec (72)
    on left: 58 59, on right: 56 57
VarDec (73)
    on left: 60, on right: 21 44 58 59 76
Exp (74)
    on left: 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78
    79, on right: 4 8 9 10 11 23 24 25 27 28 59 61 62 63 64 65 66 67
    68 69 70 71 73 74 75


State 0

    0 $accept: . Program $end

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    DATA         shift, and go to state 3
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 7
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    IF           shift, and go to state 13
    WHILE        shift, and go to state 14
    RETURN       shift, and go to state 15
    SEMI         shift, and go to state 16
    LP           shift, and go to state 17
    LC           shift, and go to state 18

    $default  reduce using rule 3 (DSList)

    Program          go to state 19
    DSList           go to state 20
    Stmt             go to state 21
    CompSt           go to state 22
    FuncType         go to state 23
    FuncDec          go to state 24
    FuncBody         go to state 25
    FuncCall         go to state 26
    ArrayType        go to state 27
    ReferType        go to state 28
    ADTDef           go to state 29
    ADTHeader        go to state 30
    TypeId           go to state 31
    PatternMatching  go to state 32
    Specifier        go to state 33
    VarDef           go to state 34
    VarDec           go to state 35
    Exp              go to state 36


State 1

   74 Exp: DEFER . LP Exp RP

    LP  shift, and go to state 37


State 2

   29 ReferType: REFER . LP Specifier RP
   73 Exp: REFER . LP Exp RP

    LP  shift, and go to state 38


State 3

   32 ADTHeader: DATA . TypeId ADTParamList

    UPPERID  shift, and go to state 5

    TypeId  go to state 39


State 4

   60 VarDec: LOWERID .

    $default  reduce using rule 60 (VarDec)


State 5

   43 TypeId: UPPERID .

    $default  reduce using rule 43 (TypeId)


State 6

   16 FuncType: FUNC . LP FuncParamType RP

    LP  shift, and go to state 40


State 7

   44 PatternMatching: LET . LP ConstructorId PatternMatchingParamList RP ASSIGNOP VarDec
   49 Specifier: LET .

    LP  shift, and go to state 41

    $default  reduce using rule 49 (Specifier)


State 8

   65 Exp: NOT . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 43


State 9

   70 Exp: MINUS . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 44


State 10

   48 Specifier: BUILDINTYPE .

    $default  reduce using rule 48 (Specifier)


State 11

   77 Exp: INT .

    $default  reduce using rule 77 (Exp)


State 12

   78 Exp: FLOAT .

    $default  reduce using rule 78 (Exp)


State 13

    9 Stmt: IF . LP Exp RP Stmt
   10     | IF . LP Exp RP Stmt ELSE Stmt

    LP  shift, and go to state 45


State 14

   11 Stmt: WHILE . LP Exp RP Stmt

    LP  shift, and go to state 46


State 15

    8 Stmt: RETURN . Exp SEMI

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 47


State 16

   12 Stmt: SEMI .

    $default  reduce using rule 12 (Stmt)


State 17

   17 FuncDec: LP . VarList RP DEDUCT Specifier
   18        | LP . RP DEDUCT Specifier
   71 Exp: LP . Exp RP

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    LP           shift, and go to state 17
    RP           shift, and go to state 49

    FuncType   go to state 23
    FuncDec    go to state 24
    VarList    go to state 50
    ParamDec   go to state 51
    FuncBody   go to state 25
    FuncCall   go to state 26
    ArrayType  go to state 27
    ReferType  go to state 28
    TypeId     go to state 31
    Specifier  go to state 52
    VarDec     go to state 35
    Exp        go to state 53


State 18

   13 CompSt: LC . DSList RC

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    DATA         shift, and go to state 3
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 7
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    IF           shift, and go to state 13
    WHILE        shift, and go to state 14
    RETURN       shift, and go to state 15
    SEMI         shift, and go to state 16
    LP           shift, and go to state 17
    LC           shift, and go to state 18

    $default  reduce using rule 3 (DSList)

    DSList           go to state 54
    Stmt             go to state 21
    CompSt           go to state 22
    FuncType         go to state 23
    FuncDec          go to state 24
    FuncBody         go to state 25
    FuncCall         go to state 26
    ArrayType        go to state 27
    ReferType        go to state 28
    ADTDef           go to state 29
    ADTHeader        go to state 30
    TypeId           go to state 31
    PatternMatching  go to state 32
    Specifier        go to state 33
    VarDef           go to state 34
    VarDec           go to state 35
    Exp              go to state 36


State 19

    0 $accept: Program . $end

    $end  shift, and go to state 55


State 20

    1 Program: DSList .

    $default  reduce using rule 1 (Program)


State 21

    2 DSList: Stmt . DSList

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    DATA         shift, and go to state 3
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 7
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    IF           shift, and go to state 13
    WHILE        shift, and go to state 14
    RETURN       shift, and go to state 15
    SEMI         shift, and go to state 16
    LP           shift, and go to state 17
    LC           shift, and go to state 18

    $default  reduce using rule 3 (DSList)

    DSList           go to state 56
    Stmt             go to state 21
    CompSt           go to state 22
    FuncType         go to state 23
    FuncDec          go to state 24
    FuncBody         go to state 25
    FuncCall         go to state 26
    ArrayType        go to state 27
    ReferType        go to state 28
    ADTDef           go to state 29
    ADTHeader        go to state 30
    TypeId           go to state 31
    PatternMatching  go to state 32
    Specifier        go to state 33
    VarDef           go to state 34
    VarDec           go to state 35
    Exp              go to state 36


State 22

    7 Stmt: CompSt .

    $default  reduce using rule 7 (Stmt)


State 23

   53 Specifier: FuncType .

    $default  reduce using rule 53 (Specifier)


State 24

   22 FuncBody: FuncDec . CompSt

    LC  shift, and go to state 18

    CompSt  go to state 57


State 25

   79 Exp: FuncBody .

    $default  reduce using rule 79 (Exp)


State 26

   72 Exp: FuncCall .

    $default  reduce using rule 72 (Exp)


State 27

   51 Specifier: ArrayType .

    $default  reduce using rule 51 (Specifier)


State 28

   52 Specifier: ReferType .

    $default  reduce using rule 52 (Specifier)


State 29

    6 Stmt: ADTDef .

    $default  reduce using rule 6 (Stmt)


State 30

   30 ADTDef: ADTHeader . SEMI
   31       | ADTHeader . ASSIGNOP ConstructorDecList

    ASSIGNOP  shift, and go to state 58
    SEMI      shift, and go to state 59


State 31

   50 Specifier: TypeId .

    $default  reduce using rule 50 (Specifier)


State 32

   55 VarDef: PatternMatching .

    $default  reduce using rule 55 (VarDef)


State 33

   28 ArrayType: Specifier . LB Exp RB
   54 VarDef: Specifier . DecList

    LOWERID  shift, and go to state 4
    LB       shift, and go to state 60

    DecList  go to state 61
    Dec      go to state 62
    VarDec   go to state 63


State 34

    5 Stmt: VarDef . SEMI

    SEMI  shift, and go to state 64


State 35

   76 Exp: VarDec .

    $default  reduce using rule 76 (Exp)


State 36

    4 Stmt: Exp . SEMI
   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    SEMI      shift, and go to state 73
    DOT       shift, and go to state 74
    LP        shift, and go to state 75


State 37

   74 Exp: DEFER LP . Exp RP

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 76


State 38

   29 ReferType: REFER LP . Specifier RP
   73 Exp: REFER LP . Exp RP

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    LP           shift, and go to state 17

    FuncType   go to state 23
    FuncDec    go to state 24
    FuncBody   go to state 25
    FuncCall   go to state 26
    ArrayType  go to state 27
    ReferType  go to state 28
    TypeId     go to state 31
    Specifier  go to state 77
    VarDec     go to state 35
    Exp        go to state 78


State 39

   32 ADTHeader: DATA TypeId . ADTParamList

    LOWERID  shift, and go to state 79

    $default  reduce using rule 34 (ADTParamList)

    ADTParamList  go to state 80
    ADTParam      go to state 81


State 40

   16 FuncType: FUNC LP . FuncParamType RP

    REFER        shift, and go to state 82
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    BUILDINTYPE  shift, and go to state 10

    FuncParamType  go to state 83
    FuncType       go to state 23
    ArrayType      go to state 27
    ReferType      go to state 28
    TypeId         go to state 31
    Specifier      go to state 84


State 41

   44 PatternMatching: LET LP . ConstructorId PatternMatchingParamList RP ASSIGNOP VarDec

    UPPERID  shift, and go to state 85

    ConstructorId  go to state 86


State 42

   73 Exp: REFER . LP Exp RP

    LP  shift, and go to state 87


State 43

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   65    | NOT Exp .
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    DOT  shift, and go to state 74
    LP   shift, and go to state 75

    $default  reduce using rule 65 (Exp)


State 44

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   70    | MINUS Exp .
   75    | Exp . DOT INT

    STAR  shift, and go to state 71
    DIV   shift, and go to state 72
    DOT   shift, and go to state 74
    LP    shift, and go to state 75

    $default  reduce using rule 70 (Exp)


State 45

    9 Stmt: IF LP . Exp RP Stmt
   10     | IF LP . Exp RP Stmt ELSE Stmt

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 88


State 46

   11 Stmt: WHILE LP . Exp RP Stmt

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 89


State 47

    8 Stmt: RETURN Exp . SEMI
   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    SEMI      shift, and go to state 90
    DOT       shift, and go to state 74
    LP        shift, and go to state 75


State 48

   49 Specifier: LET .

    $default  reduce using rule 49 (Specifier)


State 49

   18 FuncDec: LP RP . DEDUCT Specifier

    DEDUCT  shift, and go to state 91


State 50

   17 FuncDec: LP VarList . RP DEDUCT Specifier

    RP  shift, and go to state 92


State 51

   19 VarList: ParamDec . COMMA VarList
   20        | ParamDec .

    COMMA  shift, and go to state 93

    $default  reduce using rule 20 (VarList)


State 52

   21 ParamDec: Specifier . VarDec
   28 ArrayType: Specifier . LB Exp RB

    LOWERID  shift, and go to state 4
    LB       shift, and go to state 60

    VarDec  go to state 94


State 53

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   71    | LP Exp . RP
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75
    RP        shift, and go to state 95


State 54

   13 CompSt: LC DSList . RC

    RC  shift, and go to state 96


State 55

    0 $accept: Program $end .

    $default  accept


State 56

    2 DSList: Stmt DSList .

    $default  reduce using rule 2 (DSList)


State 57

   22 FuncBody: FuncDec CompSt .

    $default  reduce using rule 22 (FuncBody)


State 58

   31 ADTDef: ADTHeader ASSIGNOP . ConstructorDecList

    UPPERID  shift, and go to state 85

    ConstructorDecList  go to state 97
    ConstructorDec      go to state 98
    ConstructorId       go to state 99


State 59

   30 ADTDef: ADTHeader SEMI .

    $default  reduce using rule 30 (ADTDef)


State 60

   28 ArrayType: Specifier LB . Exp RB

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 100


State 61

   54 VarDef: Specifier DecList .

    $default  reduce using rule 54 (VarDef)


State 62

   56 DecList: Dec .
   57        | Dec . COMMA DecList

    COMMA  shift, and go to state 101

    $default  reduce using rule 56 (DecList)


State 63

   58 Dec: VarDec .
   59    | VarDec . ASSIGNOP Exp

    ASSIGNOP  shift, and go to state 102

    $default  reduce using rule 58 (Dec)


State 64

    5 Stmt: VarDef SEMI .

    $default  reduce using rule 5 (Stmt)


State 65

   61 Exp: Exp ASSIGNOP . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 103


State 66

   62 Exp: Exp RELOP . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 104


State 67

   63 Exp: Exp AND . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 105


State 68

   64 Exp: Exp OR . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 106


State 69

   66 Exp: Exp PLUS . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 107


State 70

   67 Exp: Exp MINUS . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 108


State 71

   68 Exp: Exp STAR . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 109


State 72

   69 Exp: Exp DIV . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 110


State 73

    4 Stmt: Exp SEMI .

    $default  reduce using rule 4 (Stmt)


State 74

   75 Exp: Exp DOT . INT

    INT  shift, and go to state 111


State 75

   23 FuncCall: Exp LP . RP
   24         | Exp LP . Args RP

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 42
    PLACEHOLDER  shift, and go to state 112
    LOWERID      shift, and go to state 4
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    LP           shift, and go to state 17
    RP           shift, and go to state 113

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    Args      go to state 114
    VarDec    go to state 35
    Exp       go to state 115


State 76

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   74    | DEFER LP Exp . RP
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75
    RP        shift, and go to state 116


State 77

   28 ArrayType: Specifier . LB Exp RB
   29 ReferType: REFER LP Specifier . RP

    RP  shift, and go to state 117
    LB  shift, and go to state 60


State 78

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   73    | REFER LP Exp . RP
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75
    RP        shift, and go to state 118


State 79

   35 ADTParam: LOWERID .

    $default  reduce using rule 35 (ADTParam)


State 80

   32 ADTHeader: DATA TypeId ADTParamList .

    $default  reduce using rule 32 (ADTHeader)


State 81

   33 ADTParamList: ADTParam . ADTParamList

    LOWERID  shift, and go to state 79

    $default  reduce using rule 34 (ADTParamList)

    ADTParamList  go to state 119
    ADTParam      go to state 81


State 82

   29 ReferType: REFER . LP Specifier RP

    LP  shift, and go to state 120


State 83

   16 FuncType: FUNC LP FuncParamType . RP

    RP  shift, and go to state 121


State 84

   14 FuncParamType: Specifier . DEDUCT FuncParamType
   15              | Specifier .
   28 ArrayType: Specifier . LB Exp RB

    DEDUCT  shift, and go to state 122
    LB      shift, and go to state 60

    $default  reduce using rule 15 (FuncParamType)


State 85

   39 ConstructorId: UPPERID .

    $default  reduce using rule 39 (ConstructorId)


State 86

   44 PatternMatching: LET LP ConstructorId . PatternMatchingParamList RP ASSIGNOP VarDec

    PLACEHOLDER  shift, and go to state 123
    LOWERID      shift, and go to state 124

    $default  reduce using rule 47 (PatternMatchingParamList)

    PatternMatchingParamList  go to state 125


State 87

   73 Exp: REFER LP . Exp RP

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 78


State 88

    9 Stmt: IF LP Exp . RP Stmt
   10     | IF LP Exp . RP Stmt ELSE Stmt
   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75
    RP        shift, and go to state 126


State 89

   11 Stmt: WHILE LP Exp . RP Stmt
   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75
    RP        shift, and go to state 127


State 90

    8 Stmt: RETURN Exp SEMI .

    $default  reduce using rule 8 (Stmt)


State 91

   18 FuncDec: LP RP DEDUCT . Specifier

    REFER        shift, and go to state 82
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    BUILDINTYPE  shift, and go to state 10

    FuncType   go to state 23
    ArrayType  go to state 27
    ReferType  go to state 28
    TypeId     go to state 31
    Specifier  go to state 128


State 92

   17 FuncDec: LP VarList RP . DEDUCT Specifier

    DEDUCT  shift, and go to state 129


State 93

   19 VarList: ParamDec COMMA . VarList

    REFER        shift, and go to state 82
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    BUILDINTYPE  shift, and go to state 10

    FuncType   go to state 23
    VarList    go to state 130
    ParamDec   go to state 51
    ArrayType  go to state 27
    ReferType  go to state 28
    TypeId     go to state 31
    Specifier  go to state 52


State 94

   21 ParamDec: Specifier VarDec .

    $default  reduce using rule 21 (ParamDec)


State 95

   71 Exp: LP Exp RP .

    $default  reduce using rule 71 (Exp)


State 96

   13 CompSt: LC DSList RC .

    $default  reduce using rule 13 (CompSt)


State 97

   31 ADTDef: ADTHeader ASSIGNOP ConstructorDecList .

    $default  reduce using rule 31 (ADTDef)


State 98

   36 ConstructorDecList: ConstructorDec .
   37                   | ConstructorDec . ConstructorDecList

    UPPERID  shift, and go to state 85

    UPPERID   [reduce using rule 36 (ConstructorDecList)]
    $default  reduce using rule 36 (ConstructorDecList)

    ConstructorDecList  go to state 131
    ConstructorDec      go to state 98
    ConstructorId       go to state 99


State 99

   38 ConstructorDec: ConstructorId . TypeIdList

    LOWERID  shift, and go to state 79
    UPPERID  shift, and go to state 5
    SEMI     shift, and go to state 132

    ADTParam    go to state 133
    TypeIdList  go to state 134
    TypeId      go to state 135


State 100

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   28 ArrayType: Specifier LB Exp . RB
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75
    RB        shift, and go to state 136


State 101

   57 DecList: Dec COMMA . DecList

    LOWERID  shift, and go to state 4

    DecList  go to state 137
    Dec      go to state 62
    VarDec   go to state 63


State 102

   59 Dec: VarDec ASSIGNOP . Exp

    DEFER    shift, and go to state 1
    REFER    shift, and go to state 42
    LOWERID  shift, and go to state 4
    NOT      shift, and go to state 8
    MINUS    shift, and go to state 9
    INT      shift, and go to state 11
    FLOAT    shift, and go to state 12
    LP       shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    VarDec    go to state 35
    Exp       go to state 138


State 103

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   61    | Exp ASSIGNOP Exp .
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75

    $default  reduce using rule 61 (Exp)


State 104

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   62    | Exp RELOP Exp .
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72
    DOT    shift, and go to state 74
    LP     shift, and go to state 75

    $default  reduce using rule 62 (Exp)


State 105

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   63    | Exp AND Exp .
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    RELOP  shift, and go to state 66
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72
    DOT    shift, and go to state 74
    LP     shift, and go to state 75

    $default  reduce using rule 63 (Exp)


State 106

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   64    | Exp OR Exp .
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    RELOP  shift, and go to state 66
    AND    shift, and go to state 67
    PLUS   shift, and go to state 69
    MINUS  shift, and go to state 70
    STAR   shift, and go to state 71
    DIV    shift, and go to state 72
    DOT    shift, and go to state 74
    LP     shift, and go to state 75

    $default  reduce using rule 64 (Exp)


State 107

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   66    | Exp PLUS Exp .
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    STAR  shift, and go to state 71
    DIV   shift, and go to state 72
    DOT   shift, and go to state 74
    LP    shift, and go to state 75

    $default  reduce using rule 66 (Exp)


State 108

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   67    | Exp MINUS Exp .
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    STAR  shift, and go to state 71
    DIV   shift, and go to state 72
    DOT   shift, and go to state 74
    LP    shift, and go to state 75

    $default  reduce using rule 67 (Exp)


State 109

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   68    | Exp STAR Exp .
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    DOT  shift, and go to state 74
    LP   shift, and go to state 75

    $default  reduce using rule 68 (Exp)


State 110

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   69    | Exp DIV Exp .
   75    | Exp . DOT INT

    DOT  shift, and go to state 74
    LP   shift, and go to state 75

    $default  reduce using rule 69 (Exp)


State 111

   75 Exp: Exp DOT INT .

    $default  reduce using rule 75 (Exp)


State 112

   26 Args: PLACEHOLDER . COMMA Args

    COMMA  shift, and go to state 139


State 113

   23 FuncCall: Exp LP RP .

    $default  reduce using rule 23 (FuncCall)


State 114

   24 FuncCall: Exp LP Args . RP

    RP  shift, and go to state 140


State 115

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   25 Args: Exp . COMMA Args
   27     | Exp .
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    COMMA     shift, and go to state 141
    DOT       shift, and go to state 74
    LP        shift, and go to state 75

    $default  reduce using rule 27 (Args)


State 116

   74 Exp: DEFER LP Exp RP .

    $default  reduce using rule 74 (Exp)


State 117

   29 ReferType: REFER LP Specifier RP .

    $default  reduce using rule 29 (ReferType)


State 118

   73 Exp: REFER LP Exp RP .

    $default  reduce using rule 73 (Exp)


State 119

   33 ADTParamList: ADTParam ADTParamList .

    $default  reduce using rule 33 (ADTParamList)


State 120

   29 ReferType: REFER LP . Specifier RP

    REFER        shift, and go to state 82
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    BUILDINTYPE  shift, and go to state 10

    FuncType   go to state 23
    ArrayType  go to state 27
    ReferType  go to state 28
    TypeId     go to state 31
    Specifier  go to state 77


State 121

   16 FuncType: FUNC LP FuncParamType RP .

    $default  reduce using rule 16 (FuncType)


State 122

   14 FuncParamType: Specifier DEDUCT . FuncParamType

    REFER        shift, and go to state 82
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    BUILDINTYPE  shift, and go to state 10

    FuncParamType  go to state 142
    FuncType       go to state 23
    ArrayType      go to state 27
    ReferType      go to state 28
    TypeId         go to state 31
    Specifier      go to state 84


State 123

   46 PatternMatchingParamList: PLACEHOLDER . PatternMatchingParamList

    PLACEHOLDER  shift, and go to state 123
    LOWERID      shift, and go to state 124

    $default  reduce using rule 47 (PatternMatchingParamList)

    PatternMatchingParamList  go to state 143


State 124

   45 PatternMatchingParamList: LOWERID . PatternMatchingParamList

    PLACEHOLDER  shift, and go to state 123
    LOWERID      shift, and go to state 124

    $default  reduce using rule 47 (PatternMatchingParamList)

    PatternMatchingParamList  go to state 144


State 125

   44 PatternMatching: LET LP ConstructorId PatternMatchingParamList . RP ASSIGNOP VarDec

    RP  shift, and go to state 145


State 126

    9 Stmt: IF LP Exp RP . Stmt
   10     | IF LP Exp RP . Stmt ELSE Stmt

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    DATA         shift, and go to state 3
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 7
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    IF           shift, and go to state 13
    WHILE        shift, and go to state 14
    RETURN       shift, and go to state 15
    SEMI         shift, and go to state 16
    LP           shift, and go to state 17
    LC           shift, and go to state 18

    Stmt             go to state 146
    CompSt           go to state 22
    FuncType         go to state 23
    FuncDec          go to state 24
    FuncBody         go to state 25
    FuncCall         go to state 26
    ArrayType        go to state 27
    ReferType        go to state 28
    ADTDef           go to state 29
    ADTHeader        go to state 30
    TypeId           go to state 31
    PatternMatching  go to state 32
    Specifier        go to state 33
    VarDef           go to state 34
    VarDec           go to state 35
    Exp              go to state 36


State 127

   11 Stmt: WHILE LP Exp RP . Stmt

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    DATA         shift, and go to state 3
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 7
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    IF           shift, and go to state 13
    WHILE        shift, and go to state 14
    RETURN       shift, and go to state 15
    SEMI         shift, and go to state 16
    LP           shift, and go to state 17
    LC           shift, and go to state 18

    Stmt             go to state 147
    CompSt           go to state 22
    FuncType         go to state 23
    FuncDec          go to state 24
    FuncBody         go to state 25
    FuncCall         go to state 26
    ArrayType        go to state 27
    ReferType        go to state 28
    ADTDef           go to state 29
    ADTHeader        go to state 30
    TypeId           go to state 31
    PatternMatching  go to state 32
    Specifier        go to state 33
    VarDef           go to state 34
    VarDec           go to state 35
    Exp              go to state 36


State 128

   18 FuncDec: LP RP DEDUCT Specifier .
   28 ArrayType: Specifier . LB Exp RB

    LB  shift, and go to state 60

    $default  reduce using rule 18 (FuncDec)


State 129

   17 FuncDec: LP VarList RP DEDUCT . Specifier

    REFER        shift, and go to state 82
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 48
    BUILDINTYPE  shift, and go to state 10

    FuncType   go to state 23
    ArrayType  go to state 27
    ReferType  go to state 28
    TypeId     go to state 31
    Specifier  go to state 148


State 130

   19 VarList: ParamDec COMMA VarList .

    $default  reduce using rule 19 (VarList)


State 131

   37 ConstructorDecList: ConstructorDec ConstructorDecList .

    $default  reduce using rule 37 (ConstructorDecList)


State 132

   42 TypeIdList: SEMI .

    $default  reduce using rule 42 (TypeIdList)


State 133

   41 TypeIdList: ADTParam . TypeIdList

    LOWERID  shift, and go to state 79
    UPPERID  shift, and go to state 5
    SEMI     shift, and go to state 132

    ADTParam    go to state 133
    TypeIdList  go to state 149
    TypeId      go to state 135


State 134

   38 ConstructorDec: ConstructorId TypeIdList .

    $default  reduce using rule 38 (ConstructorDec)


State 135

   40 TypeIdList: TypeId . TypeIdList

    LOWERID  shift, and go to state 79
    UPPERID  shift, and go to state 5
    SEMI     shift, and go to state 132

    ADTParam    go to state 133
    TypeIdList  go to state 150
    TypeId      go to state 135


State 136

   28 ArrayType: Specifier LB Exp RB .

    $default  reduce using rule 28 (ArrayType)


State 137

   57 DecList: Dec COMMA DecList .

    $default  reduce using rule 57 (DecList)


State 138

   23 FuncCall: Exp . LP RP
   24         | Exp . LP Args RP
   59 Dec: VarDec ASSIGNOP Exp .
   61 Exp: Exp . ASSIGNOP Exp
   62    | Exp . RELOP Exp
   63    | Exp . AND Exp
   64    | Exp . OR Exp
   66    | Exp . PLUS Exp
   67    | Exp . MINUS Exp
   68    | Exp . STAR Exp
   69    | Exp . DIV Exp
   75    | Exp . DOT INT

    ASSIGNOP  shift, and go to state 65
    RELOP     shift, and go to state 66
    AND       shift, and go to state 67
    OR        shift, and go to state 68
    PLUS      shift, and go to state 69
    MINUS     shift, and go to state 70
    STAR      shift, and go to state 71
    DIV       shift, and go to state 72
    DOT       shift, and go to state 74
    LP        shift, and go to state 75

    $default  reduce using rule 59 (Dec)


State 139

   26 Args: PLACEHOLDER COMMA . Args

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 42
    PLACEHOLDER  shift, and go to state 112
    LOWERID      shift, and go to state 4
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    LP           shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    Args      go to state 151
    VarDec    go to state 35
    Exp       go to state 115


State 140

   24 FuncCall: Exp LP Args RP .

    $default  reduce using rule 24 (FuncCall)


State 141

   25 Args: Exp COMMA . Args

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 42
    PLACEHOLDER  shift, and go to state 112
    LOWERID      shift, and go to state 4
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    LP           shift, and go to state 17

    FuncDec   go to state 24
    FuncBody  go to state 25
    FuncCall  go to state 26
    Args      go to state 152
    VarDec    go to state 35
    Exp       go to state 115


State 142

   14 FuncParamType: Specifier DEDUCT FuncParamType .

    $default  reduce using rule 14 (FuncParamType)


State 143

   46 PatternMatchingParamList: PLACEHOLDER PatternMatchingParamList .

    $default  reduce using rule 46 (PatternMatchingParamList)


State 144

   45 PatternMatchingParamList: LOWERID PatternMatchingParamList .

    $default  reduce using rule 45 (PatternMatchingParamList)


State 145

   44 PatternMatching: LET LP ConstructorId PatternMatchingParamList RP . ASSIGNOP VarDec

    ASSIGNOP  shift, and go to state 153


State 146

    9 Stmt: IF LP Exp RP Stmt .
   10     | IF LP Exp RP Stmt . ELSE Stmt

    ELSE  shift, and go to state 154

    $default  reduce using rule 9 (Stmt)


State 147

   11 Stmt: WHILE LP Exp RP Stmt .

    $default  reduce using rule 11 (Stmt)


State 148

   17 FuncDec: LP VarList RP DEDUCT Specifier .
   28 ArrayType: Specifier . LB Exp RB

    LB  shift, and go to state 60

    $default  reduce using rule 17 (FuncDec)


State 149

   41 TypeIdList: ADTParam TypeIdList .

    $default  reduce using rule 41 (TypeIdList)


State 150

   40 TypeIdList: TypeId TypeIdList .

    $default  reduce using rule 40 (TypeIdList)


State 151

   26 Args: PLACEHOLDER COMMA Args .

    $default  reduce using rule 26 (Args)


State 152

   25 Args: Exp COMMA Args .

    $default  reduce using rule 25 (Args)


State 153

   44 PatternMatching: LET LP ConstructorId PatternMatchingParamList RP ASSIGNOP . VarDec

    LOWERID  shift, and go to state 4

    VarDec  go to state 155


State 154

   10 Stmt: IF LP Exp RP Stmt ELSE . Stmt

    DEFER        shift, and go to state 1
    REFER        shift, and go to state 2
    DATA         shift, and go to state 3
    LOWERID      shift, and go to state 4
    UPPERID      shift, and go to state 5
    FUNC         shift, and go to state 6
    LET          shift, and go to state 7
    NOT          shift, and go to state 8
    MINUS        shift, and go to state 9
    BUILDINTYPE  shift, and go to state 10
    INT          shift, and go to state 11
    FLOAT        shift, and go to state 12
    IF           shift, and go to state 13
    WHILE        shift, and go to state 14
    RETURN       shift, and go to state 15
    SEMI         shift, and go to state 16
    LP           shift, and go to state 17
    LC           shift, and go to state 18

    Stmt             go to state 156
    CompSt           go to state 22
    FuncType         go to state 23
    FuncDec          go to state 24
    FuncBody         go to state 25
    FuncCall         go to state 26
    ArrayType        go to state 27
    ReferType        go to state 28
    ADTDef           go to state 29
    ADTHeader        go to state 30
    TypeId           go to state 31
    PatternMatching  go to state 32
    Specifier        go to state 33
    VarDef           go to state 34
    VarDec           go to state 35
    Exp              go to state 36


State 155

   44 PatternMatching: LET LP ConstructorId PatternMatchingParamList RP ASSIGNOP VarDec .

    $default  reduce using rule 44 (PatternMatching)


State 156

   10 Stmt: IF LP Exp RP Stmt ELSE Stmt .

    $default  reduce using rule 10 (Stmt)

test1.cmm
检查变量未定义而使用，可以分几种情况讨论：
1.直接使用，如i；
2.出现在等号两侧，另外一侧是常量或已定义的变量；
3.等号两侧都是未定义的变量；
4.连续等号的情况，错误不应该蔓延，如int i = j = 1;
5.关系运算符以及算术运算符同2-4；
6.出现在数组运算符中的未定义变量以及包含未定义变量的等式／算数表达式／关系表达式;

test2.cmm
检查函数未定义而实用，可以分几种情况讨论：
1.函数在之前没有声明而使用；
2.函数在之前声明但整个程序未定义而使用；
3.函数在之前声明且在之后定义而使用；
4.函数在之前定义而使用；

test3.cmm
检查变量的重复定义，可以分几种情况讨论（因为这个语言的规定比较奇怪）：
1.同块级作用域中重复定义相同类型变量；
2.同块级作用域中重复定义不同类型变量（注意让结构体类型参与进来）；
3.同函数不同块级作用域中重复定义相同类型变量；
5.同一函数的形参与其内部同类型变量的重复定义；
6.不同函数的形参间重复定义相同类型的变量；
7.不同函数内部重复定义相同类型的变量；
8.不同结构体重复定义相同类型的变量（同一结构体重复定义某个变量是另外一种错误）；
9.函数与结构体重复定义相同类型变量；
10.函数中定义的变量与全局变量重复；
11.结构体中定义的变量与全局变量冲突；

test4.cmm
检查函数的重复定义，可以分几种情况讨论：
1.函数类型相同的重复定义；
2.函数类型不同的重复定义（在做类型检查的时候以先见到的为准）；

test5.cmm
检查赋值号两边类型不同的情况，可以分几种情况讨论：
1.int／float类型变量的相互赋值；
2.不同结构体变量之间的相互赋值（采用名等价）；

test6.cmm
检查向左值赋值的情况，只有一种情况：
1.向常量赋值（可以和赋值类型错误混合）；

test7.cmm
检查操作符两侧的操作数类型不匹配的错误，可以分几类讨论：
1.int／float类型变量的加减法等；
2.引入结构体类型变量一起检查；
3.检查错误蔓延的防止；

test8.cmm
检查函数返回值类型不正确的情况，可以分几类讨论：
1.根本没有return语句；
2.return语句返回的类型不正确；

test9.cmm
检查形参予实参的数目不一致的情况，可以分几类讨论：
1.实参比形参多；
2.形参比实参少；

test10.cmm
检查对非数组进行取元素操作的情况，可以分几类讨论：
1.非数组类型变量采用取元素操作；
2.取元素操作的次数超过了数组的维度；
3.把数组与结构体／匿名结构体／函数形参／函数返回值一起查；

test11.cmm
检查把变量当作函数使用的情况

test12.cmm
检查数组访问符中出现了非整数类型变量的情况，可以分几类讨论：
1.出现浮点型常量；
2.出现浮点型变量；
3.出现结构体类型变量；
4.出现函数调用，且函数的返回值是整型；
5.出现函数调用，且函数的返回值不是整型；
6.结构体中取元素如4-5处理；

test13.cmm
检对非结构体类型变量取字段的情况，可以分几类讨论：
1.int／float；
2.数组；
3.结合函数调用与s.i.i等类型的嵌套情况一起查；

test14.cmm
检查访问未定义域的情况：
1.匿名结构体类型的变量；
2.非匿名结构体类型的变量；

test15.cmm
检查结构体定义中变量重复定义的问题：
1.相同类型；
2.不同类型；

test16.cmm
检查结构体名字重复定义的情况

test17.cmm
检查使用未定义结构体的情况

待检查部分：
1.变量与类型不可重复定义；
2.变量与函数可以重复定义；
3.结构体的嵌套定义；
4.结构体的嵌套访问；
